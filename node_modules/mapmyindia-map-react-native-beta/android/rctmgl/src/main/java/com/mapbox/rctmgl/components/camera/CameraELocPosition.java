package com.mapbox.rctmgl.components.camera;

import android.os.Parcel;
import android.os.Parcelable;

import androidx.annotation.FloatRange;

import com.mapbox.mapboxsdk.geometry.LatLng;
import com.mapbox.mapboxsdk.utils.MathUtils;

/**
 * Created by Saksham on 27-01-2021
 */
public class CameraELocPosition implements Parcelable {

    public final String target;
    public final double zoom;
    public final double tilt;
    public final double bearing;

    CameraELocPosition(String target, double zoom, double tilt, double bearing) {
        this.target = target;
        this.zoom = zoom;
        this.tilt = tilt;
        this.bearing = bearing;
    }

    protected CameraELocPosition(Parcel in) {
        target = in.readString();
        zoom = in.readDouble();
        tilt = in.readDouble();
        bearing = in.readDouble();
    }

    @Override
    public String toString() {
        return "CameraELocPosition{" +
                "target='" + target + '\'' +
                ", zoom=" + zoom +
                ", tilt=" + tilt +
                ", bearing=" + bearing +
                '}';
    }

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeString(target);
        dest.writeDouble(zoom);
        dest.writeDouble(tilt);
        dest.writeDouble(bearing);
    }

    @SuppressWarnings("unused")
    public static final Parcelable.Creator<CameraELocPosition> CREATOR = new Parcelable.Creator<CameraELocPosition>() {
        @Override
        public CameraELocPosition createFromParcel(Parcel in) {
            return new CameraELocPosition(in);
        }

        @Override
        public CameraELocPosition[] newArray(int size) {
            return new CameraELocPosition[size];
        }
    };

    public static final class Builder {
        private double bearing = -1.0D;
        private String target = null;
        private double tilt = -1.0D;
        private double zoom = -1.0D;

        public Builder target(String target) {
            this.target = target;
            return this;
        }

        public Builder bearing(double bearing) {
            double direction;
            for(direction = bearing; direction >= 360.0D; direction -= 360.0D) {
            }

            while(direction < 0.0D) {
                direction += 360.0D;
            }

            this.bearing = direction;
            return this;
        }

        public Builder tilt(@FloatRange(from = 0.0D,to = 60.0D) double tilt) {
            this.tilt = MathUtils.clamp(tilt, 0.0D, 60.0D);
            return this;
        }

        public Builder zoom(@FloatRange(from = 1.0D,to = 20.0D) double zoom) {
            this.zoom = zoom;
            return this;
        }

        public CameraELocPosition build() {
            return new CameraELocPosition(target, zoom, tilt, bearing);
        }
    }
}
